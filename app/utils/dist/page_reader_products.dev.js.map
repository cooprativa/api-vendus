{"version":3,"sources":["page_reader_products.js"],"names":["API_KEY","process","env","VENDUS_API_KEY","URL","DATA_DIR","cwd","SEARCH_RESULTS_FILE","apiClient","axios","create","auth","username","password","timeout","maxRedirects","headers","RETRY_CONFIG","maxRetries","baseDelay","maxDelay","backoffFactor","sleep","ms","Promise","resolve","setTimeout","loadSearchResultsFromFile","filePath","fs","readFile","data","parsedData","JSON","parse","found","Map","Object","entries","code","console","log","error","searchDate","Date","toISOString","totalSearched","totalFound","notFound","saveSearchResultsToFile","mkdir","recursive","dataToSave","fromEntries","writeFile","stringify","fetchPageFromVendus","page","attempt","get","params","response","delay","Math","min","pow","warn","message","status","request","updateProductsFromKnownPages","productsToUpdate","maxPages","foundProducts","notFoundProducts","Set","keys","length","forEach","vendusProduct","reference","has","set","size","executeProductUpdate","exit","existingResults","updatedFound","ref","updatedResults","Array","from"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport fs from 'fs/promises';\r\nimport { join } from 'path';\r\nimport 'dotenv/config';\r\n\r\n// Use the environment variable for the API_KEY\r\nconst API_KEY = process.env.VENDUS_API_KEY;\r\nconst URL = \"https://www.vendus.pt/ws/v1.1/products\";\r\n\r\nconst DATA_DIR = join(process.cwd(), 'app', 'data');\r\nconst SEARCH_RESULTS_FILE = join(DATA_DIR, \"search_results.json\");\r\n\r\nconst apiClient = axios.create({\r\n  auth: {\r\n    username: API_KEY,\r\n    password: ''\r\n  },\r\n  timeout: 15000,\r\n  maxRedirects: 0,\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'User-Agent': 'Node.js API Client',\r\n    'Connection': 'keep-alive'\r\n  }\r\n});\r\n\r\nconst RETRY_CONFIG = {\r\n  maxRetries: 3,\r\n  baseDelay: 1000,\r\n  maxDelay: 8000,\r\n  backoffFactor: 2\r\n};\r\n\r\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nasync function loadSearchResultsFromFile(filePath) {\r\n  try {\r\n    const data = await fs.readFile(filePath, 'utf8');\r\n    const parsedData = JSON.parse(data);\r\n    if (parsedData.found && !(parsedData.found instanceof Map)) {\r\n      parsedData.found = new Map(Object.entries(parsedData.found));\r\n    } else if (!parsedData.found) {\r\n      parsedData.found = new Map();\r\n    }\r\n    return parsedData;\r\n  } catch (error) {\r\n    if (error.code === 'ENOENT') {\r\n      console.log(`File not found: ${filePath}. Returning empty results.`);\r\n    } else {\r\n      console.error(`Error reading or parsing search results file ${filePath}:`, error);\r\n    }\r\n    return {\r\n      searchDate: new Date().toISOString(),\r\n      totalSearched: 0,\r\n      totalFound: 0,\r\n      found: new Map(),\r\n      notFound: []\r\n    };\r\n  }\r\n}\r\n\r\nasync function saveSearchResultsToFile(filePath, data) {\r\n  try {\r\n    await fs.mkdir(join(filePath, '..'), { recursive: true });\r\n\r\n    const dataToSave = { ...data };\r\n    if (dataToSave.found instanceof Map) {\r\n      dataToSave.found = Object.fromEntries(dataToSave.found);\r\n    }\r\n    await fs.writeFile(filePath, JSON.stringify(dataToSave, null, 2), 'utf8');\r\n    console.log(`Results saved to ${filePath}`);\r\n  } catch (error) {\r\n    console.error(`Error saving search results to file ${filePath}:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchPageFromVendus(page, attempt = 0) {\r\n  if (!API_KEY) {\r\n    return { error: \"Vendus API Key not available. Cannot fetch Vendus data.\" };\r\n  }\r\n  try {\r\n    console.log(`Fetching Vendus products: Page ${page}, Attempt ${attempt + 1}`);\r\n    const response = await apiClient.get(URL, {\r\n      params: {\r\n        page: page,\r\n      },\r\n    });\r\n    return { data: response.data.data };\r\n  } catch (error) {\r\n    if (attempt < RETRY_CONFIG.maxRetries) {\r\n      const delay = Math.min(RETRY_CONFIG.baseDelay * Math.pow(RETRY_CONFIG.backoffFactor, attempt), RETRY_CONFIG.maxDelay);\r\n      console.warn(`Failed to fetch page ${page}. Retrying in ${delay}ms... (Attempt ${attempt + 1}/${RETRY_CONFIG.maxRetries})`);\r\n      await sleep(delay);\r\n      return fetchPageFromVendus(page, attempt + 1);\r\n    }\r\n    console.error(`Error fetching Vendus products page ${page} after ${RETRY_CONFIG.maxRetries} attempts:`, error.message);\r\n    if (error.response) {\r\n      console.error('Response data:', error.response.data);\r\n      console.error('Response status:', error.response.status);\r\n      console.error('Response headers:', error.response.headers);\r\n    } else if (error.request) {\r\n      console.error('No response received:', error.request);\r\n    }\r\n    return { error: error.message };\r\n  }\r\n}\r\n\r\nasync function updateProductsFromKnownPages(productsToUpdate, maxPages) {\r\n  const foundProducts = new Map();\r\n  const notFoundProducts = new Set(productsToUpdate.keys());\r\n  let totalSearched = 0;\r\n\r\n  for (let page = 1; page <= maxPages; page++) {\r\n    console.log(`Processing Vendus page ${page} for product updates...`);\r\n    const { data, error } = await fetchPageFromVendus(page);\r\n\r\n    if (error) {\r\n      console.error(`Skipping page ${page} due to error: ${error}`);\r\n      continue;\r\n    }\r\n\r\n    if (!data || data.length === 0) {\r\n      console.log(`No more products found on page ${page}. Ending search.`);\r\n      break;\r\n    }\r\n\r\n    totalSearched += data.length;\r\n\r\n    data.forEach(vendusProduct => {\r\n      const reference = vendusProduct.reference;\r\n      if (productsToUpdate.has(reference)) {\r\n        foundProducts.set(reference, vendusProduct);\r\n        notFoundProducts.delete(reference);\r\n        console.log(`✅ Found and updated product: ${reference}`);\r\n      }\r\n    });\r\n\r\n    if (notFoundProducts.size === 0) {\r\n      console.log(\"All specified products found. Ending search early.\");\r\n      break;\r\n    }\r\n\r\n    await sleep(200);\r\n  }\r\n\r\n  return { found: foundProducts, notFound: notFoundProducts, totalSearched };\r\n}\r\n\r\nasync function executeProductUpdate() {\r\n  console.log(\"Starting the product update process in page_reader_products.js...\");\r\n  if (!API_KEY) {\r\n    console.error(\"❌ Vendus API Key is not set. Please ensure VENDUS_API_KEY environment variable is configured.\");\r\n    process.exit(1);\r\n  }\r\n\r\n  try {\r\n    await fs.mkdir(DATA_DIR, { recursive: true });\r\n\r\n    const existingResults = await loadSearchResultsFromFile(SEARCH_RESULTS_FILE);\r\n    const productsToUpdate = existingResults.found || new Map();\r\n\r\n    if (productsToUpdate.size === 0) {\r\n      console.log(\"ℹ️ No product references found in 'search_results.json' to update from Vendus. No Vendus API search will be performed.\");\r\n      return;\r\n    }\r\n\r\n    const { found, notFound, totalSearched } = await updateProductsFromKnownPages(productsToUpdate, 10);\r\n\r\n    const updatedFound = {};\r\n    found.forEach((data, ref) => {\r\n      updatedFound[ref] = data;\r\n    });\r\n\r\n    const updatedResults = {\r\n      searchDate: new Date().toISOString(),\r\n      totalSearched: totalSearched,\r\n      totalFound: found.size,\r\n      found: updatedFound,\r\n      notFound: Array.from(notFound)\r\n    };\r\n\r\n    await saveSearchResultsToFile(SEARCH_RESULTS_FILE, updatedResults);\r\n\r\n    console.log('\\n🎉 Vendus product data update completed and results saved to search_results.json!');\r\n\r\n  } catch (error) {\r\n    console.error('❌ Vendus update process failed:', error.message);\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\nexecuteProductUpdate();\r\n"],"file":"page_reader_products.dev.js"}