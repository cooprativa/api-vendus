{"version":3,"sources":["FileSystemUtils.js"],"names":["_fs","require","_monitor","FileSystemUtils","fs","mkdir","DATA_DIR","recursive","console","error","_context","t0","filePath","defaultValue","this","ensureDataDirectory","readFile","JSON","parse","data","log","concat","writeFile","stringify","_context3"],"mappings":"mGACA,IAAAA,IAAAC,QAAA,MACAC,SAAAD,QAAA,kaAEaE,0QAHbC,IAAAA,SAAAC,MAAAC,SAAAA,SAAA,CAAAC,WAAA,iEACAC,QAAAC,MAAA,mCAAAC,EAAAC,oGAY4BC,8GAAUC,iCAAe,gDAEzCC,KAAKC,uEACQX,IAAAA,SAAGY,SAASJ,EAAU,wBAblCT,2BAcAc,KAAKC,MAAMC,6CAElBX,QAAQY,IAAR,oBAAAC,OAAgCT,EAAhC,oBAA4DC,qBACrDA,iGAIgBD,EAAUO,qIAE3BL,KAAKC,uEACLX,IAAAA,SAAGkB,UAAUV,EAAUK,KAAKM,UAAUJ,EAAM,KAAM,sCACjD,yCAEPX,QAAQC,MAAR,wBAAAY,OAAsCT,EAAtC,KAAAY,EAAAb","file":"FileSystemUtils.min.js","sourcesContent":["// app/utils/FileSystemUtils.js\r\nimport { promises as fs } from \"fs\";\r\nimport { DATA_DIR } from \"../constants/monitor\";\r\n\r\nexport class FileSystemUtils {\r\n  static async ensureDataDirectory() {\r\n    try {\r\n      await fs.mkdir(DATA_DIR, { recursive: true });\r\n    } catch (error) {\r\n      console.error(\"Failed to create data directory:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async readJsonFile(filePath, defaultValue = null) {\r\n    try {\r\n      await this.ensureDataDirectory();\r\n      const data = await fs.readFile(filePath, \"utf-8\");\r\n      return JSON.parse(data);\r\n    } catch (error) {\r\n      console.log(`No file found at ${filePath}, using default:`, defaultValue);\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  static async writeJsonFile(filePath, data) {\r\n    try {\r\n      await this.ensureDataDirectory();\r\n      await fs.writeFile(filePath, JSON.stringify(data, null, 2));\r\n      return true;\r\n    } catch (error) {\r\n      console.error(`Failed to write file ${filePath}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n"]}