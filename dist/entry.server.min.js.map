{"version":3,"sources":["entry.server.js"],"names":["_react","_interopRequireDefault","require","_react2","_isbot","_stream","_server","handleDocumentRequest","request","responseStatusCode","responseHeaders","remixContext","Promise","resolve","reject","didError","stream","PassThrough","pipe","renderToPipeableStream","React","createElement","RemixServer","context","url","onShellReady","set","Response","headers","status","err","onShellError","error"],"mappings":"0GAAA,IAAAA,OAAAC,uBAAAC,QAAA,UACAC,QAAAD,QAAA,oBACAE,OAAAF,QAAA,SACAG,QAAAH,QAAA,UACAI,QAAAJ,QAAA,4FAEe,SAASK,sBANxBC,EAQEC,EAPFC,EASEC,GAEA,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAT/B,IAAAC,GAAA,EACAC,EAAA,IAAAC,QAAAA,YAaYC,GAAS,EAAAZ,QAAAa,wBAjBMC,OAAAA,QAAAC,cAAAC,QAAAA,YAAA,CAAAC,QAAAZ,EAAAa,IAAAhB,EAAAgB,MAMZ,CAMbC,aANa,WAOPV,EAAJW,IAAA,eAAA,aAWMb,EAZgC,IAAAc,SAAAX,EAKrB,CAEfI,OAAMC,EAAAA,IAAcC,EAAsBM,QAAEjB,KAGxCD,EAAAA,IAIImB,aApBC,SAoBOd,GACRa,EAAOE,IAIXZ,QAzBK,SAyBAF,GAXTD,GAAA,EAaEgB,QAbFC,MAAAF,MAHMZ","file":"entry.server.min.js","sourcesContent":["import React from \"react\"; // <--- You need to import React to use React.createElement\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport { isbot } from \"isbot\";\r\nimport { PassThrough } from \"stream\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nexport default function handleDocumentRequest(\r\n  request,\r\n  responseStatusCode,\r\n  responseHeaders,\r\n  remixContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let didError = false;\r\n\r\n    const stream = new PassThrough();\r\n\r\n    const { pipe } = renderToPipeableStream(\r\n      // Replaced <RemixServer context={remixContext} url={request.url} /> with React.createElement\r\n      React.createElement(RemixServer, { context: remixContext, url: request.url }),\r\n      {\r\n        onShellReady() {\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              status: didError ? 500 : responseStatusCode,\r\n              headers: responseHeaders,\r\n            })\r\n          );\r\n\r\n          pipe(stream);\r\n        },\r\n        onShellError(err) {\r\n          reject(err);\r\n        },\r\n        onError(err) {\r\n          didError = true;\r\n          console.error(err);\r\n        },\r\n      }\r\n    );\r\n  });\r\n}\r\n"]}