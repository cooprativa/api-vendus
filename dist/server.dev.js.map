{"version":3,"sources":["server.js"],"names":["app","all","build","mode","process","env","NODE_ENV","port","PORT","listen","console","log"],"mappings":";;AAGA;;AACA;;AAEA;;;;;;;;;;AAEA;AAEA,IAAMA,GAAG,GAAG,2BAAZ,C,CAEA;;AAEAA,GAAG,CAACC,GAAJ,CACE,GADF,EAEE,mCAAqB;AACnBC,EAAAA,KAAK,EAAE;AAAA;AAAA,6CAAa,kBAAb;AAAA;AAAA,GADY;AAEnBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFC,CAArB,CAFF;AAQA,IAAMC,IAAI,GAAGH,OAAO,CAACC,GAAR,CAAYG,IAAZ,IAAoB,IAAjC;AACAR,GAAG,CAACS,MAAJ,CAAWF,IAAX,EAAiB,YAAM;AACrBG,EAAAA,OAAO,CAACC,GAAR,kDAAsDJ,IAAtD,GADqB,CAErB;;AACA;AACD,CAJD,E,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// server.js\r\n// This is your main Remix server entry point.\r\n\r\nimport { createRequestHandler } from \"@remix-run/express\";\r\nimport express from \"express\";\r\n// IMPORT YOUR NEW PROCESSOR SCRIPT HERE:\r\nimport { startProductProcessor } from './app/tasks/processProductsSnapshot.js';\r\n\r\n// Ensure your package.json has \"type\": \"module\" if you're getting import/export errors.\r\n\r\nconst app = express();\r\n\r\n// ... (your existing Express/Remix middleware and setup) ...\r\n\r\napp.all(\r\n  \"*\",\r\n  createRequestHandler({\r\n    build: () => import(\"./build/index.js\"),\r\n    mode: process.env.NODE_ENV,\r\n  })\r\n);\r\n\r\nconst port = process.env.PORT || 3000;\r\napp.listen(port, () => {\r\n  console.log(`Remix Express server listening on port ${port}`);\r\n  // --- Start the product snapshot processor when the server starts ---\r\n  startProductProcessor();\r\n});\r\n\r\n// Optional: Add a graceful shutdown handler to stop the processor\r\n// import { stopProductProcessor } from './app/tasks/processProductsSnapshot.js';\r\n// process.on('SIGTERM', () => {\r\n//   console.log('SIGTERM signal received. Shutting down gracefully.');\r\n//   stopProductProcessor();\r\n//   server.close(() => {\r\n//     console.log('HTTP server closed.');\r\n//     process.exit(0);\r\n//   });\r\n// });\r\n"],"file":"server.dev.js"}