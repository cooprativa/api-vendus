{"version":3,"sources":["server.js"],"names":["_express","require","_express2","_interopRequireDefault","_processProductsSnapshot","app","all","createRequestHandler","Promise","resolve","then","_interopRequireWildcard","mode","process","env","NODE_ENV","port","PORT","listen","console","log","concat","startProductProcessor"],"mappings":"aAGA,IAAAA,SAAAC,QAAA,sBACAC,UAAAC,uBAAAF,QAAA,YAEAG,yBAAAH,QAAA,k9BAIA,IAAMI,KAAM,EAAAH,UAAA,WAIZG,IAAIC,IACF,KAPF,EAAAN,SAAAO,sBAAA,CAEMF,MAAM,WAAA,OAAAG,QAAAC,UAAAC,KAAA,WAAA,OAAAC,wBAAAV,QAAA,wBAQRW,KAAMC,QAAQC,IAAIC,YADX,IAAAC,KAAAH,QAAAC,IAAAG,MAAA,IAAAZ,IAAAa,OAAAF,KAAA,WAAAG,QADYC,IACZ,0CAAAC,OADYL,QAFvB,EAAAZ,yBAAAkB","file":"server.min.js","sourcesContent":["// server.js\r\n// This is your main Remix server entry point.\r\n\r\nimport { createRequestHandler } from \"@remix-run/express\";\r\nimport express from \"express\";\r\n// IMPORT YOUR NEW PROCESSOR SCRIPT HERE:\r\nimport { startProductProcessor } from './app/tasks/processProductsSnapshot.js';\r\n\r\n// Ensure your package.json has \"type\": \"module\" if you're getting import/export errors.\r\n\r\nconst app = express();\r\n\r\n// ... (your existing Express/Remix middleware and setup) ...\r\n\r\napp.all(\r\n  \"*\",\r\n  createRequestHandler({\r\n    build: () => import(\"./build/index.js\"),\r\n    mode: process.env.NODE_ENV,\r\n  })\r\n);\r\n\r\nconst port = process.env.PORT || 3000;\r\napp.listen(port, () => {\r\n  console.log(`Remix Express server listening on port ${port}`);\r\n  // --- Start the product snapshot processor when the server starts ---\r\n  startProductProcessor();\r\n});\r\n\r\n// Optional: Add a graceful shutdown handler to stop the processor\r\n// import { stopProductProcessor } from './app/tasks/processProductsSnapshot.js';\r\n// process.on('SIGTERM', () => {\r\n//   console.log('SIGTERM signal received. Shutting down gracefully.');\r\n//   stopProductProcessor();\r\n//   server.close(() => {\r\n//     console.log('HTTP server closed.');\r\n//     process.exit(0);\r\n//   });\r\n// });\r\n"]}