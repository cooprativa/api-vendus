{"version":3,"sources":["entry.server.js"],"names":["handleDocumentRequest","request","responseStatusCode","responseHeaders","remixContext","Promise","resolve","reject","didError","stream","PassThrough","React","createElement","RemixServer","context","url","onShellReady","set","Response","status","headers","pipe","onShellError","err","onError","console","error"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAJ2B;AAMZ,SAASA,qBAAT,CACbC,OADa,EAEbC,kBAFa,EAGbC,eAHa,EAIbC,YAJa,EAKb;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIC,QAAQ,GAAG,KAAf;AAEA,QAAMC,MAAM,GAAG,IAAIC,mBAAJ,EAAf;;AAHsC,gCAKrB,qCACf;AACAC,sBAAMC,aAAN,CAAoBC,mBAApB,EAAiC;AAAEC,MAAAA,OAAO,EAAEV,YAAX;AAAyBW,MAAAA,GAAG,EAAEd,OAAO,CAACc;AAAtC,KAAjC,CAFe,EAGf;AACEC,MAAAA,YADF,0BACiB;AACbb,QAAAA,eAAe,CAACc,GAAhB,CAAoB,cAApB,EAAoC,WAApC;AAEAX,QAAAA,OAAO,CACL,IAAIY,QAAJ,CAAaT,MAAb,EAAqB;AACnBU,UAAAA,MAAM,EAAEX,QAAQ,GAAG,GAAH,GAASN,kBADN;AAEnBkB,UAAAA,OAAO,EAAEjB;AAFU,SAArB,CADK,CAAP;AAOAkB,QAAAA,IAAI,CAACZ,MAAD,CAAJ;AACD,OAZH;AAaEa,MAAAA,YAbF,wBAaeC,GAbf,EAaoB;AAChBhB,QAAAA,MAAM,CAACgB,GAAD,CAAN;AACD,OAfH;AAgBEC,MAAAA,OAhBF,mBAgBUD,GAhBV,EAgBe;AACXf,QAAAA,QAAQ,GAAG,IAAX;AACAiB,QAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACD;AAnBH,KAHe,CALqB;AAAA,QAK9BF,IAL8B,yBAK9BA,IAL8B;AA8BvC,GA9BM,CAAP;AA+BD","sourcesContent":["import React from \"react\"; // <--- You need to import React to use React.createElement\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport { isbot } from \"isbot\";\r\nimport { PassThrough } from \"stream\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nexport default function handleDocumentRequest(\r\n  request,\r\n  responseStatusCode,\r\n  responseHeaders,\r\n  remixContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let didError = false;\r\n\r\n    const stream = new PassThrough();\r\n\r\n    const { pipe } = renderToPipeableStream(\r\n      // Replaced <RemixServer context={remixContext} url={request.url} /> with React.createElement\r\n      React.createElement(RemixServer, { context: remixContext, url: request.url }),\r\n      {\r\n        onShellReady() {\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              status: didError ? 500 : responseStatusCode,\r\n              headers: responseHeaders,\r\n            })\r\n          );\r\n\r\n          pipe(stream);\r\n        },\r\n        onShellError(err) {\r\n          reject(err);\r\n        },\r\n        onError(err) {\r\n          didError = true;\r\n          console.error(err);\r\n        },\r\n      }\r\n    );\r\n  });\r\n}\r\n"],"file":"entry.server.dev.js"}