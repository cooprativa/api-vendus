{"version":3,"sources":[".graphqlrc.js"],"names":["getConfig","config","projects","apiType","ApiType","Admin","apiVersion","LATEST_API_VERSION","documents","outputDir","extensions","fs","readdirSync","entry","extensionPath","schema","existsSync"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AACA,SAASA,SAAT,GAAqB;AACnB,MAAMC,MAAM,GAAG;AACbC,IAAAA,QAAQ,EAAE;AACR,iBAAS,yCAAkB;AACzBC,QAAAA,OAAO,EAAEC,0BAAQC,KADQ;AAEzBC,QAAAA,UAAU,EAAEC,8BAFa;AAGzBC,QAAAA,SAAS,EAAE,CACT,4BADS,EAET,oCAFS,CAHc;AAOzBC,QAAAA,SAAS,EAAE;AAPc,OAAlB;AADD;AADG,GAAf;AAaA,MAAIC,UAAU,GAAG,EAAjB;;AACA,MAAI;AACFA,IAAAA,UAAU,GAAGC,eAAGC,WAAH,CAAe,cAAf,CAAb;AACD,GAFD,CAEE,gBAAM,CACN;AACD;;AAnBkB;AAAA;AAAA;;AAAA;AAoBnB,yBAAoBF,UAApB,8HAAgC;AAAA,UAArBG,KAAqB;AAC9B,UAAMC,aAAa,0BAAmBD,KAAnB,CAAnB;AACA,UAAME,MAAM,aAAMD,aAAN,oBAAZ;;AACA,UAAI,CAACH,eAAGK,UAAH,CAAcD,MAAd,CAAL,EAA4B;AAC1B;AACD;;AACDd,MAAAA,MAAM,CAACC,QAAP,CAAgBW,KAAhB,IAAyB;AACvBE,QAAAA,MAAM,EAANA,MADuB;AAEvBP,QAAAA,SAAS,EAAE,WAAIM,aAAJ;AAFY,OAAzB;AAID;AA9BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA+BnB,SAAOb,MAAP;AACD;;AACD,IAAMA,MAAM,GAAGD,SAAS,EAAxB;eACeC,M","sourcesContent":["import fs from \"fs\";\r\nimport { LATEST_API_VERSION } from \"@shopify/shopify-api\";\r\nimport { shopifyApiProject, ApiType } from \"@shopify/api-codegen-preset\";\r\nfunction getConfig() {\r\n  const config = {\r\n    projects: {\r\n      default: shopifyApiProject({\r\n        apiType: ApiType.Admin,\r\n        apiVersion: LATEST_API_VERSION,\r\n        documents: [\r\n          \"./app/**/*.{js,ts,jsx,tsx}\",\r\n          \"./app/.server/**/*.{js,ts,jsx,tsx}\",\r\n        ],\r\n        outputDir: \"./app/types\",\r\n      }),\r\n    },\r\n  };\r\n  let extensions = [];\r\n  try {\r\n    extensions = fs.readdirSync(\"./extensions\");\r\n  } catch {\r\n    // ignore if no extensions\r\n  }\r\n  for (const entry of extensions) {\r\n    const extensionPath = `./extensions/${entry}`;\r\n    const schema = `${extensionPath}/schema.graphql`;\r\n    if (!fs.existsSync(schema)) {\r\n      continue;\r\n    }\r\n    config.projects[entry] = {\r\n      schema,\r\n      documents: [`${extensionPath}/**/*.graphql`],\r\n    };\r\n  }\r\n  return config;\r\n}\r\nconst config = getConfig();\r\nexport default config;\r\n"],"file":".graphqlrc.dev.js"}