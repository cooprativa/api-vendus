{"version":3,"sources":[".graphqlrc.js"],"names":["_fs","_interopRequireDefault","require","_shopifyApi","_apiCodegenPreset","getConfig","config","projects","default","shopifyApiProject","apiType","ApiType","Admin","apiVersion","LATEST_API_VERSION","documents","outputDir","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","extensions","Symbol","iterator","next","done","entry","value","extensionPath","concat","schema","fs","err"],"mappings":"2FAAA,IAAAA,IAAAC,uBAAAC,QAAA,OACAC,YAAAD,QAAA,wBACAE,kBAAAF,QAAA,uGACA,SAASG,YACP,IAAMC,EAAS,CACbC,SAAU,CACRC,SAAS,EAAAJ,kBAAAK,mBAAkB,CANjCC,QAAAC,kBAAAA,QAAAC,MAQQC,WAAYC,YAAAA,mBAPpBC,UAAA,CASU,6BARV,sCAWQC,UAAW,kBARfT,EAAU,GACR,IACEG,EAASC,IAAAA,QAAAA,YAAAA,gBACTE,MAAAA,IALa,IAAAI,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGY,IAAA,IAAAC,EAAAC,EAAlBC,EAAkBC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAlB,CAAA,IAAAW,EAAAP,EAAAQ,MADDC,EAAA,gBAAAC,OAAAH,GADZI,EAAA,GAAAD,OAAAD,EAAA,mBAaIP,IAAAA,QAAAA,WAAJS,KAEET,EAAAA,SAAaU,GAAAA,CACbD,OAAAA,EAEDjB,UAAA,CAAA,GAAAgB,OAAAD,EAAA,qBAnBkB,MAAAI,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,QAAA,IAAAjB,GAAA,MAAAK,EAAA,QAAAA,EAAA,SAAA,QAAA,GAAAJ,EAAA,MAAAC,GAAA,OAAAb,EAiCrB,IAAMA,OAASD,qBAjCMC","file":".graphqlrc.min.js","sourcesContent":["import fs from \"fs\";\r\nimport { LATEST_API_VERSION } from \"@shopify/shopify-api\";\r\nimport { shopifyApiProject, ApiType } from \"@shopify/api-codegen-preset\";\r\nfunction getConfig() {\r\n  const config = {\r\n    projects: {\r\n      default: shopifyApiProject({\r\n        apiType: ApiType.Admin,\r\n        apiVersion: LATEST_API_VERSION,\r\n        documents: [\r\n          \"./app/**/*.{js,ts,jsx,tsx}\",\r\n          \"./app/.server/**/*.{js,ts,jsx,tsx}\",\r\n        ],\r\n        outputDir: \"./app/types\",\r\n      }),\r\n    },\r\n  };\r\n  let extensions = [];\r\n  try {\r\n    extensions = fs.readdirSync(\"./extensions\");\r\n  } catch {\r\n    // ignore if no extensions\r\n  }\r\n  for (const entry of extensions) {\r\n    const extensionPath = `./extensions/${entry}`;\r\n    const schema = `${extensionPath}/schema.graphql`;\r\n    if (!fs.existsSync(schema)) {\r\n      continue;\r\n    }\r\n    config.projects[entry] = {\r\n      schema,\r\n      documents: [`${extensionPath}/**/*.graphql`],\r\n    };\r\n  }\r\n  return config;\r\n}\r\nconst config = getConfig();\r\nexport default config;\r\n"]}